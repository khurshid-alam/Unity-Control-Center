AC_INIT(control-center)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(control-center, 2.8.0)

AM_MAINTAINER_MODE

AC_PROG_INTLTOOL
GNOME_COMPILE_WARNINGS

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL


m4_define(fontilus_version, 0.4)
m4_define(gnomevfs_minver, 2.0.0)
m4_define(fontconfig_minver, 1.0.0)
m4_define(xft_minver, 2.0.0)
m4_define(gtk_minver, 2.0.0)
m4_define(libbonobo_minver, 2.0.0)
m4_define(libgnomeui_minver, 2.1.90)

changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

# Internationalization support
ALL_LINGUAS="af am ar az be bg bn bs ca cs cy da de el en_CA en_GB es et eu fa fi fr ga gl gu he hi hr hu id is it ja ko lt lv mk ml mn ms nb nl nn no pa pl pt pt_BR ro ru sk sl sq sr sr@Latn sv ta th tr uk vi wa zh_CN zh_TW"

GETTEXT_PACKAGE=control-center-2.0
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Gettext package])

AM_GLIB_GNU_GETTEXT

AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(putenv)
AC_CHECK_FUNCS(setenv)
AC_CHECK_FUNCS(ngettext, have_ngettext=yes)

if test x"$have_ngettext" != "xyes"; then
	AC_MSG_ERROR([Your Gettext installation doesn't seem to support ngettext to handle translation of plural forms. Please install GNU Gettext])
fi;

AC_PATH_XTRA
x_libs="$X_PRE_LIBS $X_LIBS -lX11 $X_EXTRA_LIBS"

AC_CHECK_FUNC(XScreenSaverQueryInfo, [
  TYPING_BREAK="typing-break"],[
  AC_MSG_CHECKING([for XScreenSaverQueryInfo in -lXss])
  save_LDFLAGS=$LDFLAGS
  save_LIBS=$LIBS
  LIBS="$LIBS $X_PRE_LIBS $X_LIBS -lXss -lXext -lX11"
  AC_TRY_LINK([#include <X11/Xlib.h>
#include <X11/extensions/scrnsaver.h>],[
XScreenSaverQueryInfo(NULL, 0, NULL);],[
  AC_MSG_RESULT(yes)
  TYPING_BREAK="typing-break"
  SCREENSAVER_LIBS="$X_PRE_LIBS $X_LIBS -lXss -lXext -lX11"],[
  AC_MSG_RESULT(no)])
  LIBS=$save_LIBS
  LDFLAGS=$save_LDFLAGS])
AC_SUBST(TYPING_BREAK)
AC_SUBST(SCREENSAVER_LIBS)

dnl keyboard-properties-capplet
savecppflags=$CPPFLAGS
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
AC_CHECK_HEADERS([X11/Xlib.h])
AC_CHECK_HEADERS([X11/extensions/xf86misc.h], [XF86MISC_LIBS="-lXxf86misc"],[],
[#if HAVE_X11_XLIB_H
#include <X11/Xlib.h>
#endif
])
AC_SUBST(XF86MISC_LIBS)
AC_CHECK_HEADERS(X11/extensions/XKB.h)
CPPFLAGS=$savecppflags


dnl ==============================================
dnl Check that we meet the  dependencies
dnl ==============================================

COMMON_MODULES="gtk+-2.0 >= 2.3.0 gconf-2.0 libgnomeui-2.0 >= 2.2.0 libglade-2.0 >= 1.99.12 libbonobo-2.0 libbonoboui-2.0 libglade-2.0 gconf-2.0 gnome-desktop-2.0 >= 2.2.0"
PKG_CHECK_MODULES(CAPPLET, $COMMON_MODULES)
PKG_CHECK_MODULES(GNOMECC, $COMMON_MODULES libxml-2.0 gnome-desktop-2.0 gnome-vfs-2.0)
PKG_CHECK_MODULES(GNOME_SETTINGS_DAEMON, gtk+-2.0 gconf-2.0 libgnomeui-2.0 esound gnome-desktop-2.0 libglade-2.0)
PKG_CHECK_MODULES(OLD_CAPPLET, libgnomeui-2.0 libglade-2.0)
PKG_CHECK_MODULES(GNOME, libgnomeui-2.0)
PKG_CHECK_MODULES(GTK, gtk+-2.0)
PKG_CHECK_MODULES(VFS_CAPPLET, $COMMON_MODULES gnome-vfs-module-2.0 gnome-vfs-2.0)
PKG_CHECK_MODULES(GNOME_DESKTOP, gnome-desktop-2.0)
PKG_CHECK_MODULES(SOUND_CAPPLET, esound)
PKG_CHECK_MODULES(METACITY, libmetacity-private)
PKG_CHECK_MODULES(LIBXKLAVIER, libxklavier >= 1.02,,
    AC_MSG_ERROR([Upcoming releases of gnome-control-center will depend on libxklavier.
The latest release is available from http://prdownloads.sourceforge.net/gswitchit], 1))

dnl
dnl Check for Xft version 2; we build in extra functionality to the font capplet
dnl when we have it.
dnl
xft_modules=
if $PKG_CONFIG --exists xft ; then
  xft_modules="xft"
  AC_DEFINE(HAVE_XFT2,,[Build Xft functionality to the font capplet])
fi

PKG_CHECK_MODULES(FONT_CAPPLET, $COMMON_MODULES $xft_modules)

PKG_CHECK_MODULES(AT_CAPPLET, $COMMON_MODULES)
				
dnl
dnl Check for XRandR, needed for display capplet
dnl		
	
have_randr=no
AC_CHECK_LIB(Xrandr, XRRUpdateConfiguration,
  [AC_CHECK_HEADER(X11/extensions/Xrandr.h,
     have_randr=yes
     RANDR_LIBS="-lXrandr -lXrender"
     AC_DEFINE(HAVE_RANDR, 1, Have the Xrandr extension library),
	  :, [#include <X11/Xlib.h>])], : ,
       -lXrandr -lXrender $x_libs)
AM_CONDITIONAL(HAVE_RANDR, [test $have_randr = yes])
	
PKG_CHECK_MODULES(DISPLAY_CAPPLET, $COMMON_MODULES)

DISPLAY_CAPPLET_LIBS="$DISPLAY_CAPPLET_LIBS $RANDR_LIBS"

CAPPLET_LIBS="$CAPPLET_LIBS $x_libs"
GNOMECC_LIBS="$GNOMECC_LIBS $x_libs"
GNOME_SETTINGS_DAEMON_LIBS="$GNOME_SETTINGS_DAEMON_LIBS $x_libs"

AC_PATH_PROG(GCONFTOOL, gconftool-2)

dnl
dnl Check for XCursor support.  If it exists, then we compile the
dnl mouse capplet with support for it turned on
dnl
have_xcursor=no
AC_CHECK_HEADER(X11/Xcursor/Xcursor.h, have_xcursor=yes
				       AC_DEFINE(HAVE_XCURSOR, 1, Have the Xcursor extension),
				       :, [#include <X11/Xlib.h>])
AM_CONDITIONAL(HAVE_XCURSOR, [test $have_xcursor=yes])

dnl
dnl Check for gtk+ with multihead support
dnl
AC_MSG_CHECKING([for gtk+ multihead support])
if $PKG_CONFIG --atleast-version 2.1.0 gtk+-2.0; then
   AC_DEFINE(HAVE_GTK_MULTIHEAD,,[gtk+ with multihead support found])
   AC_MSG_RESULT(yes)
else
   AC_MSG_RESULT(no)
fi

dnl ==============
dnl gswitchit
dnl ==============
dnl Make sure the new cvs virtual include has been checked out
AC_MSG_CHECKING([for inclusion of libgswitchit])
if test ! -d "$srcdir/libgswitchit"; then 
    AC_MSG_RESULT(no)
    AC_MSG_ERROR([Your checkout of gnome-control-center is out of date.
    The 'libgswitchit' module has been virtually included into 
    gnome-control-center by CVS as a subdirectory.  Please check
    out again (this can be done on top of your existing checkout])
else
   AC_MSG_RESULT(yes)
fi
AM_CONDITIONAL(INCLUDE_GSWITCHIT_DEVEL, false)	dnl pull devel from applet

dnl ==============================================
dnl themus and fontilust dependencies
dnl ==============================================

AC_ARG_ENABLE(vfs-methods, [  --disable-vfs-methods        Do not build the fonts:/// and themes:/// uri schemes],, enable_vfs_methods=yes)

if test x$enable_vfs_methods = xyes; then 

  PKG_CHECK_MODULES(THEME_METHOD, gnome-vfs-module-2.0 >= 2.2.0 gnome-vfs-2.0 >= 2.2.0)
  PKG_CHECK_MODULES(THEMUS_THUMBNAILER, gdk-2.0 >= 2.2.0 libgnomeui-2.0 >= 2.2.0 libmetacity-private gnome-vfs-2.0 >= 2.2.0)
  PKG_CHECK_MODULES(THEMUS_COMPONENT, glib-2.0 >= 2.2.0 gtk+-2.0 >= 2.2.0 atk >= 1.2.0 libgnome-2.0 >= 2.2.0 libgnomeui-2.0 >= 2.2.0 gnome-vfs-2.0 >= 2.2.0 libbonobo-2.0 >= 2.2.0 libbonoboui-2.0 >= 2.2.0 libnautilus >= 2.2.0 libglade-2.0)
  PKG_CHECK_MODULES(FONT_METHOD,  [gnome-vfs-module-2.0 >= gnomevfs_minver  fontconfig >= fontconfig_minver])
  PKG_CHECK_MODULES(FONT_THUMBNAILER, [gnome-vfs-2.0 >= gnomevfs_minver gdk-pixbuf-2.0 >= gtk_minver])
  PKG_CHECK_MODULES(FONT_CONTEXT_MENU, [gnome-vfs-2.0 >= gnomevfs_minver libbonobo-2.0 >= libbonobo_minver])
  PKG_CHECK_MODULES(FONT_VIEW, [gnome-vfs-2.0 >= gnomevfs_minver  xft >= xft_minver gtk+-2.0 >= gtk_minver libgnomeui-2.0 >= libgnomeui_minver])

  # Add freetype flags to the thumbnailer script
  AC_PATH_PROG(FREETYPE_CONFIG, freetype-config, no)
  if test "x$FREETYPE_CONFIG" = xno; then
      AC_MSG_ERROR([Could not find freetype-config script])
  fi
  FONT_THUMBNAILER_CFLAGS="$FONT_THUMBNAILER_CFLAGS `$FREETYPE_CONFIG --cflags`"
  FONT_THUMBNAILER_LIBS="$FONT_THUMBNAILER_LIBS `$FREETYPE_CONFIG --libs`"

  THEMUS=themus
  FONTILUS=fontilus

  AC_SUBST(THEME_METHOD_CFLAGS)
  AC_SUBST(THEME_METHOD_LIBS)
  AC_SUBST(THEMUS_THUMBNAILER_CFLAGS)
  AC_SUBST(THEMUS_THUMBNAILER_LIBS)
  AC_SUBST(THEMUS_COMPONENT_CFLAGS)
  AC_SUBST(THEMUS_COMPONENT_LIBS)
  AC_SUBST(THEMUS)
  AC_SUBST(FONT_THUMBNAILER_CFLAGS)
  AC_SUBST(FONT_THUMBNAILER_LIBS)
  AC_SUBST(FONT_VIEW_CFLAGS)
  AC_SUBST(FONT_VIEW_LIBS)
  AC_SUBST(FONT_METHOD_CFLAGS)
  AC_SUBST(FONT_METHOD_LIBS)
  AC_SUBST(FONT_METHOD_CFLAGS)
  AC_SUBST(FONT_METHOD_LIBS)
  AC_SUBST(FONT_CONTEXT_MENU_CFLAGS)
  AC_SUBST(FONT_CONTEXT_MENU_LIBS)
  AC_SUBST(FONTILUS)

  # update LIBS for $export_dynamic
  if test -n "$export_dynamic"; then
    FONT_VIEW_LIBS=`echo $FONT_VIEW_LIBS | sed -e "s/$export_dynamic//"`
  fi

  if test -n "$export_dynamic"; then
    FONT_CONTEXT_MENU_LIBS=`echo $CONTEXT_MENU_LIBS | sed -e "s/$export_dynamic//"`
  fi

  if test -n "$export_dynamic"; then
    FONT_THUMBNAILER_LIBS=`echo FONT_$THUMBNAILER_LIBS | sed -e "s/$export_dynamic//"`
  fi

  if test -n "$export_dynamic"; then
    FONT_METHOD_LIBS=`echo $FONT_METHOD_LIBS | sed -e "s/$export_dynamic//"`
  fi
  GLIB_DEFINE_LOCALEDIR(FONTILUS_LOCALEDIR)
fi

dnl ==============================================
dnl End: Check that we meet the  dependencies
dnl ==============================================

dnl ==============================================
dnl IDL settings
dnl ==============================================

# orbit-idl
ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

# idl directories
LIBBONOBO_IDL_DIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(LIBBONOBO_IDL_DIR)
BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACTIVATION_IDL_DIR)

# check for nautilus
PKG_CHECK_MODULES(NAUTILUS, libnautilus)
AC_SUBST(NAUTILUS_LIBS)
AC_SUBST(NAUTILUS_CFLAGS)

# esd
ESDSERVERDIR=`$PKG_CONFIG --variable=esd_serverdir esound`
if test x"$ESDSERVERDIR" = x; then
   ESD_SERVER="esd"
else
   ESD_SERVER="$ESDSERVERDIR/esd"
fi
AC_SUBST(ESD_SERVER)

AC_PATH_PROG(GDK_PIXBUF_CSOURCE, gdk-pixbuf-csource, no)

if test x"$GDK_PIXBUF_CSOURCE" = xno; then
  AC_PATH_PROG(GDK_PIXBUF_CSOURCE_32, gdk-pixbuf-csource-32, no)
  if test x"$GDK_PIXBUF_CSOURCE_32" = xno; then
    AC_MSG_ERROR([gdk-pixbuf-csource executable not found in your path - should be installed with GTK])
  else
    GDK_PIXBUF_CSOURCE=$GDK_PIXBUF_CSOURCE_32
  fi
fi 
  
AC_SUBST(GDK_PIXBUF_CSOURCE)

AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal, no)

if test x"$GLIB_GENMARSHAL" = xno; then
  AC_MSG_ERROR([glib-genmarshal executable not found in your path - should be installed with glib])
fi

AC_SUBST(GLIB_GENMARSHAL)

dnl ==============================================
dnl Special GConf section 
dnl ==============================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

AM_GCONF_SOURCE_2

dnl ==============================================
dnl OSS section
dnl ==============================================
have_oss=no
AC_TRY_COMPILE([
	#ifdef __NetBSD__
	#include <sys/param.h>
	#include <sys/sysctl.h>
	#include <soundcard.h>
	#else
	#include <sys/soundcard.h>
	#endif
	],[
	int arg = SNDCTL_DSP_SETFRAGMENT;
	],[
	have_oss=yes
])
AC_MSG_CHECKING(for OSS audio support)
AC_MSG_RESULT($have_oss)
AM_CONDITIONAL(HAVE_OSS, test x"$have_oss" = "xyes")

dnl ==============================================
dnl ALSA section
dnl ==============================================
have_alsa=no
AC_ARG_ENABLE(alsa,
       AC_HELP_STRING([--disable-alsa],[Turn off support for ALSA version 0.9 or higher]),
       [case "${enableval}" in
               yes) WANT_ALSA=yes ;;
               no)  WANT_ALSA=no ;;
               *) AC_MSG_ERROR(bad value ${enableval} for --enable-alsa) ;;
       esac],
       [WANT_ALSA=yes]) dnl Default value

if test x$WANT_ALSA = xyes ; then
       PKG_CHECK_MODULES(ALSA, alsa >= 0.9.0,
               have_alsa=yes,
               AC_MSG_RESULT(*** All of ALSA dependent parts will be disabled ***))
else
       have_alsa=no
fi

AM_CONDITIONAL(HAVE_ALSA, test x"$have_alsa" = "xyes")
AC_SUBST(ALSA_LIBS)
AC_SUBST(ALSA_CFLAGS)

dnl ==============================================
dnl GStreamer section
dnl ==============================================
AC_ARG_ENABLE(gstreamer,
AC_HELP_STRING([--enable-gstreamer],[use gstreamer, if available]),
[case "${enableval}" in
 yes) ENABLE_GSTREAMER=yes ;;
 no)  ENABLE_GSTREAMER=no ;;
 *) AC_MSG_ERROR(bad value ${enableval} for --enable-gstreamer) ;;
esac],
[ENABLE_GSTREAMER=yes]) dnl Default value

if test "x$ENABLE_GSTREAMER" = "xyes"; then
   have_gstreamer=no
   PKG_CHECK_MODULES(GST, gstreamer-interfaces-0.8 >= 0.8.0,
		   have_gstreamer=yes,
		   AC_MSG_RESULT(*** All of GStreamer dependent parts will be disabled ***))
else
   have_gstreamer=disabled
   AC_MSG_RESULT(*** GStreamer has been explicitly disabled ***)
fi
AM_CONDITIONAL(HAVE_GSTREAMER, test x"$have_gstreamer" = "xyes")
AC_SUBST(GST_LIBS)
AC_SUBST(GST_CFLAGS)

dnl ==============================================
dnl FB Level section
dnl ==============================================
have_fb=no
AC_TRY_COMPILE([
	#include <linux/fb.h>
	#include <linux/pmu.h>
	],[
	int arg = 0;
	],[
	have_fb=yes
])
AC_MSG_CHECKING(for Brightness control support)
AC_MSG_RESULT($have_fb)
AM_CONDITIONAL(HAVE_FB, test x"$have_fb" = "xyes")

dnl ==============================================
dnl Define the main variables
dnl ==============================================
COMMON_CFLAGS="-I\$(top_srcdir)/capplets/common"
COMMON_LIBS="\$(top_builddir)/capplets/common/libcommon.la"

EXTRA_CFLAGS="-I\$(top_srcdir)/ -DG_LOG_DOMAIN=\"\\\"\$(cappletname)-properties\\\"\" -DGNOMELOCALEDIR=\"\\\"${prefix}/${DATADIRNAME}/locale\\\"\""

GNOMECC_CAPPLETS_CFLAGS="${COMMON_CFLAGS} ${CAPPLET_CFLAGS} ${EXTRA_CFLAGS}"
GNOMECC_CAPPLETS_LIBS="${COMMON_LIBS} ${CAPPLET_LIBS}"

GNOMECC_CAPPLETS_CLEANFILES="\$(desktop) \$(desktop).in"
GNOMECC_CAPPLETS_EXTRA_DIST="ChangeLog \$(desktop).in.in \$(cappletname)-capplet.png \$(cappletname)-properties.glade \$(pixmaps_DATA)"

AC_SUBST(GNOMECC_CAPPLETS_EXTRA_DIST)
AC_SUBST(GNOMECC_CAPPLETS_CLEANFILES)
AC_SUBST(GNOMECC_CAPPLETS_CFLAGS)
AC_SUBST(GNOMECC_CAPPLETS_LIBS)

AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

AC_SUBST(GNOME_CFLAGS)
AC_SUBST(GNOME_LIBS)

AC_SUBST(GNOME_SETTINGS_DAEMON_CFLAGS)
AC_SUBST(GNOME_SETTINGS_DAEMON_LIBS)

AC_SUBST(VFS_CAPPLET_CFLAGS)
AC_SUBST(VFS_CAPPLET_LIBS)

AC_SUBST(SOUND_CAPPLET_CFLAGS)
AC_SUBST(SOUND_CAPPLET_LIBS)

AC_SUBST(FONT_CAPPLET_CFLAGS)
AC_SUBST(FONT_CAPPLET_LIBS)

AC_SUBST(AT_CAPPLET_CFLAGS)
AC_SUBST(AT_CAPPLET_LIBS)

AC_SUBST(DISPLAY_CAPPLET_CFLAGS)
AC_SUBST(DISPLAY_CAPPLET_LIBS)

AC_SUBST(GNOMECC_CFLAGS)
AC_SUBST(GNOMECC_LIBS)

AC_SUBST(GNOME_DESKTOP_CFLAGS)
AC_SUBST(GNOME_DESKTOP_LIBS)

AC_SUBST(METACITY_CFLAGS)
AC_SUBST(METACITY_LIBS)

AC_SUBST(LIBXKLAVIER_CFLAGS)
AC_SUBST(LIBXKLAVIER_LIBS)

dnl ==============================================
dnl End: Define the main variables
dnl ==============================================

GCONF_CONFIG_SOURCE=
AC_ARG_ENABLE(gconf-source, [  --enable-gconf-source=sourceaddress      Where to install schema files.],GCONF_CONFIG_SOURCE=$enable_gconf_source,)

if test "x$GCONF_CONFIG_SOURCE" = "x"; then
        GCONF_CONFIG_SOURCE="xml::\${DESTDIR}\${sysconfdir}/gconf/gconf.xml.defaults"
fi

AC_SUBST(GCONF_CONFIG_SOURCE)
AC_SUBST(INSTALL_GCONF_CONFIG_SOURCE)


ORBIT_IDL="`$PKG_CONFIG --variable=orbit_idl ORBit-2.0`"
AC_SUBST(ORBIT_IDL)

LIBBONOBO_IDL_DIR="`$PKG_CONFIG --variable=idldir libbonobo-2.0`"
AC_SUBST(LIBBONOBO_IDL_DIR)

BONOBO_ACTIVATION_IDL_DIR="`$PKG_CONFIG --variable=idldir bonobo-activation-2.0`"
AC_SUBST(BONOBO_ACTIVATION_IDL_DIR)


dnl ==============================================
dnl Define the directories 
dnl ==============================================
if test "x${prefix}" = "xNONE"; then
  real_prefix=${ac_default_prefix}
else
  real_prefix=${prefix}
fi

AC_DEFINE_UNQUOTED(GNOMECC_DATA_DIR, "${real_prefix}/share/${GETTEXT_PACKAGE}",[Path to gnomecc data files])
GNOMECC_ICONS_DIR='$(datadir)/'${GETTEXT_PACKAGE}'/icons'
AC_SUBST(GNOMECC_ICONS_DIR)
GNOMECC_DESKTOP_DIR='$(datadir)/'${GETTEXT_PACKAGE}'/capplets'
AC_SUBST(GNOMECC_DESKTOP_DIR)
GNOMECC_GLADE_DIR='$(datadir)/'${GETTEXT_PACKAGE}'/interfaces'
AC_SUBST(GNOMECC_GLADE_DIR)
GNOMECC_PIXMAPS_DIR='$(datadir)/'${GETTEXT_PACKAGE}'/pixmaps'
AC_SUBST(GNOMECC_PIXMAPS_DIR)
dnl ==============================================
dnl End: Define the directories 
dnl ==============================================

dnl =======================================
dnl Variables for config_archiverConf.sh.in
dnl =======================================
CONFIG_ARCHIVER_LIBDIR='-L${libdir}'
CONFIG_ARCHIVER_LIBS="$CONFIG_ARCHIVER_LIBS -lconfig_archiver"
CONFIG_ARCHIVER_INCLUDEDIR="$CONFIG_ARCHIVER_CFLAGS -I${includedir}"

AC_SUBST(CONFIG_ARCHIVER_LIBDIR)
AC_SUBST(CONFIG_ARCHIVER_LIBS)
AC_SUBST(CONFIG_ARCHIVER_INCLUDEDIR)
dnl =======================================
dnl End: Variables for config_archiverConf.sh.in
dnl =======================================

AC_OUTPUT([
Makefile
po/Makefile.in
idl/Makefile
gnome-settings-daemon/Makefile
gnome-settings-daemon/xrdb/Makefile
gnome-settings-daemon/actions/Makefile
control-center/Makefile
control-center/GNOME_ControlCenter.server
libbackground/Makefile
libwindow-settings/Makefile
libwindow-settings/gnome-window-settings-2.0.pc
libgswitchit/Makefile
libkbdraw/Makefile
capplets/Makefile
capplets/common/Makefile
capplets/default-applications/Makefile
capplets/background/Makefile
capplets/desktop-links/Makefile
capplets/display/Makefile
capplets/font/Makefile
capplets/keybindings/Makefile
capplets/keyboard/Makefile
capplets/mouse/Makefile
capplets/sound/Makefile
capplets/theme-switcher/Makefile
capplets/ui-properties/Makefile
capplets/accessibility/Makefile
capplets/accessibility/keyboard/Makefile
capplets/accessibility/at-properties/Makefile
capplets/network/Makefile
capplets/windows/Makefile
typing-break/Makefile
schemas/Makefile
libsounds/Makefile
vfs-methods/Makefile
vfs-methods/themus/Makefile
vfs-methods/fontilus/Makefile
control-center.spec
])
dnl due to a bug in intltool we need to expand something from the root last control-center.spec
