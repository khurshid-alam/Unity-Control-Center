AC_INIT(control-center)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(control-center, 1.5.8)

AM_MAINTAINER_MODE

dnl
dnl let applications configure for gnome
dnl
gnome_cv_use_gnome=yes

AM_ACLOCAL_INCLUDE(macros)

AM_PROG_XML_I18N_TOOLS
GNOME_INIT
GNOME_COMPILE_WARNINGS

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC

dnl utility conditional
AM_CONDITIONAL(FALSE, test "x" = "y")

ALL_LINGUAS="az ca cs da de el en_GB es et fi fr ga gl hr hu it ja ko lt lv nl nn no pl pt pt_BR ro ru sk sl sv tr uk wa zh_TW"
AM_GNOME_GETTEXT

GNOME_XML_CHECK
XML_CFLAGS=`gnome-config --cflags xml`
AC_SUBST(XML_CFLAGS)

AM_PATH_LIBGLADE(,,"gnome")

AC_CHECK_HEADERS(dlfcn.h dl.h)
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl",[
AC_CHECK_LIB(dld, shl_load, DL_LIB="-ldld",[
AC_CHECK_FUNCS(dlopen, DL_LIB="",
AC_MSG_ERROR(Dynamic linking is not available on this platform.  Some
apps, like panel, will not run properly.))
])])
AC_SUBST(DL_LIB)

AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(putenv,[AC_DEFINE(HAVE_PUTENV)])
AC_CHECK_FUNCS(setenv,[AC_DEFINE(HAVE_SETENV)])

AM_PATH_LIBGLADE(,AC_MSG_ERROR([You must have LibGlade installed.]), gnome)

dnl keyboard-properties-capplet
AC_CHECK_HEADERS(X11/extensions/xf86misc.h, XF86MISC_LIBS="-lXxf86misc")
AC_SUBST(XF86MISC_LIBS)

dnl esd-manager
have_libesd=no
AM_PATH_ESD(,have_libesd=yes,
[AC_MSG_WARN([*** \`esd-manager' will not be built ***])])
AM_CONDITIONAL(HAVE_LIBESD, test yes = $have_libesd)
if test "$have_libesd" = yes; then
	AC_DEFINE(HAVE_ESD)
	AC_DEFINE(HAVE_LIBESD)
fi

dnl session-properties
AM_CONDITIONAL(SESSION, test "$GNOME_HAVE_SM" = true)

CFLAGS="-O2 -g -Wall $CFLAGS"
AC_SUBST(CFLAGS)

dnl ==============================================
dnl Check for pkg-config 
dnl ==============================================
AC_PATH_PROG(PKGCONFIG, pkg-config, no)
if test "$PKGCONFIG" = no ; then
	AC_MSG_ERROR(pkg-config was not found. Please install version 0.8.0 or newer from http://www.freedesktop.org/software/pkgconfig.)
fi
AC_MSG_CHECKING(for pkg-config >= 0.8.0)
vers=`$PKGCONFIG --version | awk 'BEGIN { FS = "."; } { print $1 * 1000000 + $2 * 1000 + $3}'`
if test "$vers" -ge 8000; then
	AC_MSG_RESULT(found)
else
	AC_MSG_ERROR(You need at least pkg-config 0.8.0 or greater for this version of control-center. Please install a newer version from http://www.freedesktop.org/software.)
fi
dnl ==============================================
dnl Check for pkg-config 
dnl ==============================================


dnl ==============================================
dnl Check for --enable-bonobo-conf option
dnl ==============================================

AC_ARG_ENABLE(bonobo-conf,[     --disable-bonobo-conf    Disable bonobo-conf support in the capplets],[
CC_USE_BONOBO_CONF=no
],[
CC_USE_BONOBO_CONF=yes
])

if test "x$CC_USE_BONOBO_CONF" = "xyes"; then
PKG_BONOBO_CHECK="bonobo bonobox"
PKG_BONOBO_CONF_CHECK="bonobo bonobo_conf >= 0.12"
bonobo_conf_enable=yes
libcommon_enable=yes
LIBCOMMON_DIR=common
moniker_enable=yes
AC_DEFINE(HAVE_BONOBO)
else
PKG_BONOBO_CHECK=
PKG_BONOBO_CONF_CHECK=
bonobo_conf_enable=
libcommon_enable=
LIBCOMMON_DIR=
moniker_enable=
fi

AC_SUBST(LIBCOMMON_DIR)

AM_CONDITIONAL(BONOBO_CONF_ENABLE, test "x$bonobo_conf_enable" = "xyes")
AM_CONDITIONAL(LIBCOMMON_ENABLE, test "x$libcommon_enable" = "xyes")
AM_CONDITIONAL(MONIKER_ENABLE, test "x$moniker_enable" = "xyes")

dnl ==============================================
dnl Check that we meet the  dependencies
dnl ==============================================
capplet_modules="libcapplet >= 1.5.4 libglade-gnome gdk_pixbuf gdk_pixbuf_xlib gal >= 0.12"
PKG_CHECK_MODULES(CAPPLET, $capplet_modules $PKG_BONOBO_CONF_CHECK)
PKG_CHECK_MODULES(GNOMECC, gnomeui libglade xml gdk_pixbuf gnomecanvaspixbuf $PKG_BONOBO_CHECK gtkhtml >= 0.9)
PKG_CHECK_MODULES(RMHELPER, gnomeui gnomecanvaspixbuf)
PKG_CHECK_MODULES(ARCHIVER, $PKG_BONOBO_CONF_CHECK xml)
PKG_CHECK_MODULES(CONFIG_ARCHIVER, bonobo gnome xml)

if test "x$moniker_enable" = "xyes"; then
PKG_CHECK_MODULES(MONIKER, $PKG_BONOBO_CONF_CHECK xml)
fi

AC_PATH_PROG(XSCREENSAVER, xscreensaver, no)
if test "$XSCREENSAVER" = no ; then
	AC_MSG_ERROR(xscreensaver was not found. It can be downloaded from http://www.jwz.org/xscreensaver/.)
fi
XSCREENSAVER_BIN_DIR=`dirname $XSCREENSAVER`
# sigh, lame 
if test "$XSCREENSAVER_BIN_DIR" = "/usr/bin/X11"; then
	XSCREENSAVER_BIN_DIR="/usr/X11R6/bin";
fi

XSCREENSAVER_PREFIX=`dirname $XSCREENSAVER_BIN_DIR`
AC_SUBST(XSCREENSAVER_PREFIX)

AC_PATH_PROG(PERL, perl, no)
if test "$PERL" = no ; then
	AC_MSG_ERROR(Perl was not found.)
fi
AC_SUBST(PERL)

dnl ==============================================
dnl End: Check that we meet the  dependencies
dnl ==============================================


dnl ==============================================
dnl Define the main variables
dnl ==============================================
if test "x$libcommon_enable" = "xyes"; then
COMMON_CFLAGS="-I\$(top_srcdir)/capplets/common"
COMMON_LIBS="\$(top_builddir)/capplets/common/libcommon.a"
else
COMMON_CFLAGS=
COMMON_LIBS=
fi

EXTRA_CFLAGS="-I\$(top_srcdir)/intl -I\$(top_srcdir)/ -DG_LOG_DOMAIN=\"\\\"\$(cappletname)-properties\\\"\" -DGNOMELOCALEDIR=\"\\\"${datadir}/locale\\\"\""

GNOMECC_CAPPLETS_CFLAGS="${CAPPLET_CFLAGS} ${EXTRA_CFLAGS} ${COMMON_CFLAGS}"
GNOMECC_CAPPLETS_LIBS="${CAPPLET_LIBS} ${COMMON_LIBS}"

GNOMECC_CAPPLETS_CLEANFILES="\$(desktop) \$(desktop).in"
GNOMECC_CAPPLETS_EXTRA_DIST="ChangeLog \$(desktop).in.in \$(cappletname)-capplet.png \$(cappletname)-properties.glade \$(pixmaps_DATA)"

AC_SUBST(GNOMECC_CAPPLETS_EXTRA_DIST)
AC_SUBST(GNOMECC_CAPPLETS_CLEANFILES)
AC_SUBST(GNOMECC_CAPPLETS_CFLAGS)
AC_SUBST(GNOMECC_CAPPLETS_LIBS)
dnl ==============================================
dnl End: Define the main variables
dnl ==============================================



dnl ==============================================
dnl Define the directories 
dnl ==============================================
if test "x${prefix}" = "xNONE"; then
  real_prefix=${ac_default_prefix}
else
  real_prefix=${prefix}
fi

AC_DEFINE_UNQUOTED(GNOMECC_ICONS_DIR, "${real_prefix}/share/${PACKAGE}/icons")
GNOMECC_ICONS_DIR=""${real_prefix}/share/${PACKAGE}/icons""
AC_SUBST(GNOMECC_ICONS_DIR)
AC_DEFINE_UNQUOTED(GNOMECC_GLADE_DIR, "${real_prefix}/share/${PACKAGE}/interfaces")
GNOMECC_GLADE_DIR=""${real_prefix}/share/${PACKAGE}/interfaces""
AC_SUBST(GNOMECC_GLADE_DIR)
AC_DEFINE_UNQUOTED(GNOMECC_PIXMAPS_DIR, "${real_prefix}/share/${PACKAGE}/pixmaps")
GNOMECC_PIXMAPS_DIR=""${real_prefix}/share/${PACKAGE}/pixmaps""
AC_SUBST(GNOMECC_PIXMAPS_DIR)
AC_DEFINE_UNQUOTED(GNOMECC_DEFAULTS_DIR, "${real_prefix}/share/${PACKAGE}/defaults")
GNOMECC_DEFAULTS_DIR=""${real_prefix}/share/${PACKAGE}/defaults""
AC_SUBST(GNOMECC_DEFAULTS_DIR)
AC_DEFINE_UNQUOTED(GNOMECC_SCREENSAVERS_DIR, "${real_prefix}/share/${PACKAGE}/screensavers")
GNOMECC_SCREENSAVERS_DIR=""${real_prefix}/share/${PACKAGE}/screensavers""
AC_SUBST(GNOMECC_SCREENSAVERS_DIR)
dnl ==============================================
dnl End: Define the directories 
dnl ==============================================


dnl ==============================================
dnl Macro for the common code
dnl ==============================================
dnl AC_DEFUN(AC_PROG_GNOMECC_CAPLETS,
dnl [
dnl GNOMECC_CAPPLETS_DESKTOP_IN_RULE='$(desktop).in: \%.desktop.in: \%.desktop.in.in\
dnl	sed -e \"s#@DESKTOP_EXEC_LINE@#$(DESKTOP_EXEC_LINE)#\" -e \"s#Icon=.\*#Icon=$(GNOMECC_ICONS_DIR)/${cappletname}-capplet.png#\" < $< \> ${cappletname}.desktop.in\
dnl d\
dnl install-data-local:\
dnl	$(mkinstalldirs) $(datadir)/control-center/capplets/$(cappletgroup)\
dnl	$(INSTALL_DATA) $(desktop) $(datadir)/control-center/capplets/$(cappletgroup)$(desktop)\
dnl install-data-am: install-data-local'
dnl AC_DIVERT_PUSH(AC_DIVERSION_SED)dnl
dnl s%@GNOMECC_CAPPLETS_DESKTOP_IN_RULE@%[$]GNOMECC_CAPPLETS_DESKTOP_IN_RULE%g
dnl AC_DIVERT_POP()dnl
dnl
dnl # Redirect the config.log output again, so that the ltconfig log is not
dnl # clobbered by the next message.
dnl exec 5>>./config.log
dnl ])
dnl AC_PROG_GNOMECC_CAPPLETS
dnl ==============================================
dnl End : Macro for the common code
dnl ==============================================



dnl =======================================
dnl Variables for config_archiverConf.sh.in
dnl =======================================
CONFIG_ARCHIVER_LIBDIR='-L${libdir}'
CONFIG_ARCHIVER_LIBS="$CONFIG_ARCHIVER_LIBS -lconfig_archiver"
CONFIG_ARCHIVER_INCLUDEDIR="$CONFIG_ARCHIVER_CFLAGS -I${includedir}"

AC_SUBST(CONFIG_ARCHIVER_LIBDIR)
AC_SUBST(CONFIG_ARCHIVER_LIBS)
AC_SUBST(CONFIG_ARCHIVER_INCLUDEDIR)
dnl =======================================
dnl End: Variables for config_archiverConf.sh.in
dnl =======================================


AC_OUTPUT([
control-center.spec
Makefile
po/Makefile.in
archiver/Makefile
control-center/Makefile
capplets/Makefile
capplets/common/Makefile
capplets/background/Makefile
capplets/default-applications/Makefile
capplets/desktop-links/Makefile
capplets/keyboard/Makefile
capplets/mouse/Makefile
dnl capplets/rollback/Makefile
capplets/screensaver/Makefile
capplets/screensaver/screensavers/Makefile
capplets/screensaver/screensavers/magic.pl
capplets/sound/Makefile
idl/Makefile
intl/Makefile])
