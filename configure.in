AC_INIT(control-center)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(control-center, 1.99.2)

AM_MAINTAINER_MODE

GNOME_COMMON_INIT
AC_PROG_INTLTOOL
GNOME_PLATFORM_GNOME_2(yes, force)
GNOME_COMPILE_WARNINGS(maximum)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL


changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

# Internationalization support
GETTEXT_PACKAGE=control-center-2.0
AC_SUBST(GETTEXT_PACKAGE)

ALL_LINGUAS="az ca cs da de el en_GB es et fi fr ga gl hr hu it ja lt lv ms nl nn no pl pt pt_BR ro ru sk sl sv tr uk wa zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

AC_CHECK_FUNCS(usleep)
AC_CHECK_FUNCS(putenv,[AC_DEFINE(HAVE_PUTENV)])
AC_CHECK_FUNCS(setenv,[AC_DEFINE(HAVE_SETENV)])

dnl keyboard-properties-capplet
AC_CHECK_HEADERS(X11/extensions/xf86misc.h, XF86MISC_LIBS="-lXxf86misc")
AC_SUBST(XF86MISC_LIBS)

dnl ==============================================
dnl Check that we meet the  dependencies
dnl ==============================================
COMMON_MODULES="gtk+-2.0 gconf-2.0 libgnomeui-2.0 libglade-2.0 libbonobo-2.0 libbonoboui-2.0 libglade-2.0 gconf-2.0"
PKG_CHECK_MODULES(CAPPLET, $COMMON_MODULES)
PKG_CHECK_MODULES(GNOMECC, $COMMON_MODULES libxml-2.0 gnome-desktop-2.0)
PKG_CHECK_MODULES(GNOME_SETTINGS_DAEMON, gtk+-2.0 gconf-2.0 libgnomeui-2.0 esound)
PKG_CHECK_MODULES(OLD_CAPPLET, libgnomeui-2.0 libglade-2.0)
PKG_CHECK_MODULES(GNOME, libgnomeui-2.0)
PKG_CHECK_MODULES(VFS_CAPPLET, $COMMON_MODULES gnome-vfs-module-2.0 gnome-vfs-2.0)

if test "$XSCREENSAVER" = no ; then
 	AC_MSG_ERROR(xscreensaver was not found. It can be downloaded from http://www.jwz.org/xscreensaver/.)
fi

AC_PATH_PROG(GCONFTOOL, gconftool-2)

dnl ==============================================
dnl End: Check that we meet the  dependencies
dnl ==============================================

dnl ==============================================
dnl Special GConf section 
dnl ==============================================

AC_PATH_PROG(GCONFTOOL, gconftool-2, no)

if test x"$GCONFTOOL" = xno; then
  AC_MSG_ERROR([gconftool-2 executable not found in your path - should be installed with GConf])
fi

AM_GCONF_SOURCE_2

dnl ==============================================
dnl Define the main variables
dnl ==============================================
COMMON_CFLAGS="-I\$(top_srcdir)/capplets/common"
COMMON_LIBS="\$(top_builddir)/capplets/common/libcommon.a"

EXTRA_CFLAGS="-I\$(top_srcdir)/intl -I\$(top_srcdir)/ -DG_LOG_DOMAIN=\"\\\"\$(cappletname)-properties\\\"\" -DGNOMELOCALEDIR=\"\\\"${datadir}/locale\\\"\""

GNOMECC_CAPPLETS_CFLAGS="${CAPPLET_CFLAGS} ${EXTRA_CFLAGS} ${COMMON_CFLAGS}"
GNOMECC_CAPPLETS_LIBS="${CAPPLET_LIBS} ${COMMON_LIBS}"

GNOMECC_CAPPLETS_CLEANFILES="\$(desktop) \$(desktop).in"
GNOMECC_CAPPLETS_EXTRA_DIST="ChangeLog \$(desktop).in.in \$(cappletname)-capplet.png \$(cappletname)-properties.glade \$(pixmaps_DATA)"

AC_SUBST(GNOMECC_CAPPLETS_EXTRA_DIST)
AC_SUBST(GNOMECC_CAPPLETS_CLEANFILES)
AC_SUBST(GNOMECC_CAPPLETS_CFLAGS)
AC_SUBST(GNOMECC_CAPPLETS_LIBS)

AC_SUBST(GNOME_SETTINGS_DAEMON_CFLAGS)
AC_SUBST(GNOME_SETTINGS_DAEMON_LIBS)

AC_SUBST(VFS_CAPPLET_CFLAGS)
AC_SUBST(VFS_CAPPLET_LIBS)

dnl ==============================================
dnl End: Define the main variables
dnl ==============================================


GCONF_CONFIG_SOURCE=
AC_ARG_ENABLE(gconf-source, [  --enable-gconf-source=sourceaddress      Where to install schema files.],GCONF_CONFIG_SOURCE=$enable_gconf_source,)

if test "x$GCONF_CONFIG_SOURCE" = "x"; then
        GCONF_CONFIG_SOURCE="xml::\${DESTDIR}\${sysconfdir}/gconf/gconf.xml.defaults"
fi

AC_SUBST(GCONF_CONFIG_SOURCE)
AC_SUBST(INSTALL_GCONF_CONFIG_SOURCE)



dnl ==============================================
dnl Define the directories 
dnl ==============================================
if test "x${prefix}" = "xNONE"; then
  real_prefix=${ac_default_prefix}
else
  real_prefix=${prefix}
fi

AC_DEFINE_UNQUOTED(GNOMECC_DATA_DIR, "${real_prefix}/share/${PACKAGE}-2")
GNOMECC_ICONS_DIR=""${datadir}/${PACKAGE}-2/icons""
AC_SUBST(GNOMECC_ICONS_DIR)
GNOMECC_DESKTOP_DIR=""${datadir}/${PACKAGE}-2/capplets""
AC_SUBST(GNOMECC_DESKTOP_DIR)
GNOMECC_GLADE_DIR=""${datadir}/${PACKAGE}-2/interfaces""
AC_SUBST(GNOMECC_GLADE_DIR)
GNOMECC_PIXMAPS_DIR=""${datadir}/${PACKAGE}-2/pixmaps""
AC_SUBST(GNOMECC_PIXMAPS_DIR)
dnl ==============================================
dnl End: Define the directories 
dnl ==============================================

dnl =======================================
dnl Variables for config_archiverConf.sh.in
dnl =======================================
CONFIG_ARCHIVER_LIBDIR='-L${libdir}'
CONFIG_ARCHIVER_LIBS="$CONFIG_ARCHIVER_LIBS -lconfig_archiver"
CONFIG_ARCHIVER_INCLUDEDIR="$CONFIG_ARCHIVER_CFLAGS -I${includedir}"

AC_SUBST(CONFIG_ARCHIVER_LIBDIR)
AC_SUBST(CONFIG_ARCHIVER_LIBS)
AC_SUBST(CONFIG_ARCHIVER_INCLUDEDIR)
dnl =======================================
dnl End: Variables for config_archiverConf.sh.in
dnl =======================================

dnl Honor ACLOCAL_FLAGS for --enable-maintainer-mode
ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_OUTPUT([
control-center.spec
Makefile
po/Makefile.in
gnome-settings-daemon/Makefile
control-center/Makefile
libbackground/Makefile
capplets/Makefile
capplets/common/Makefile
capplets/background/Makefile
capplets/default-applications/Makefile
capplets/desktop-links/Makefile
capplets/desktop-links/Sawfish/Makefile
capplets/file-types/Makefile
capplets/file-types/libuuid/Makefile
capplets/keyboard/Makefile
capplets/mouse/Makefile
capplets/screensaver/Makefile
capplets/sound/Makefile
capplets/theme-switcher/Makefile
capplets/theme-switcher/control/Makefile
capplets/ui-properties/Makefile
libsounds/Makefile
idl/Makefile])
